name: Build and Deploy Docs

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write # To push a branch
      pages: write # To push to a GitHub Pages site
      id-token: write # To update the deployment status

    steps:
      # checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # install and build mdBook
      - name: Install latest mdbook
        run: |
          tag=$(curl 'https://api.github.com/repos/rust-lang/mdbook/releases/latest' | jq -r '.tag_name')
          url="https://github.com/rust-lang/mdbook/releases/download/${tag}/mdbook-${tag}-x86_64-unknown-linux-gnu.tar.gz"
          mkdir bin
          curl -sSL $url | tar -xz --directory=./bin
          echo `pwd`/bin >> $GITHUB_PATH
      - name: Install last-changed preprocessor
        run: |
          tag=$(curl 'https://api.github.com/repos/badboy/mdbook-last-changed/releases/latest' | jq -r '.tag_name')
          url="https://github.com/badboy/mdbook-last-changed/releases/download/${tag}/mdbook-last-changed-${tag}-x86_64-unknown-linux-gnu.tar.gz"
          curl -sSL $url | tar -xz --directory=./bin
      - name: Install mermaid preprocessor
        run: |
          tag=$(curl 'https://api.github.com/repos/badboy/mdbook-mermaid/releases/latest' | jq -r '.tag_name')
          url="https://github.com/badboy/mdbook-mermaid/releases/download/${tag}/mdbook-last-changed-${tag}-x86_64-unknown-linux-gnu.tar.gz"
          curl -sSL $url | tar -xz --directory=./bin
      - name: init mdBook mermaid
        working-directory: ./docs/guide
        run: |
          mdbook-mermaid install .
      - name: Test mdBook
        working-directory: ./docs/guide
        run: |
          mdbook test
      - name: Build Book
        working-directory: ./docs/guide
        run: |
          mdbook build

      # install and build Doxygen
      - name: Install Doxygen 1.12.0
        run: |
          curl -LO https://www.doxygen.nl/files/doxygen-1.12.0.linux.bin.tar.gz
          tar -xzf doxygen-1.12.0.linux.bin.tar.gz
          mv doxygen-1.12.0/bin/doxygen `pwd`/bin
      - name: Check Doxygen version
        run: doxygen --version

      - name: Install graphviz
        run: sudo apt-get install -y graphviz
      - name: Set STRIP_FROM_PATH dynamically
        working-directory: ./docs/reference
        run: |
          echo "STRIP_FROM_PATH = $GITHUB_WORKSPACE" >> Doxyfile
          tail -n 1 Doxyfile
      - name: Generate Doxygen documentation
        working-directory: ./docs/reference
        run: doxygen Doxyfile

      # combine outputs to public directory
      - name: Combine outputs
        run: |
          rm -rf public
          mkdir -p public
          cp -r docs/guide/book/* public/
          cp -r docs/reference/html public/reference/

      # Copy the script files
      - name: Copy script files
        run: |
          cp -r docs/scripts public/

      # deploy using GitHub Actions
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public/
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
